@book{Attiya2004,
   author = {Hagit Attiya and Jennifer Welch},
   note = {Introduction contains "definition" for desctributed system.<br/>Introduction also says that distributed systems are ubiquitous},
   title = {Distributed Computing: Fundamentals, Simulations, and Advanced Topics},
   url = {https://books.google.co.uk/books?hl=en&lr=&id=3xfhhRjLUJEC&oi=fnd&pg=PA7&dq=introduction+to+distributed+computing&ots=oPsAb_oQIi&sig=633aKIyjowickoXENB4CbA0CAyg#v=onepage&q=introduction%20to%20distributed%20computing&f=false},
   year = {2004},
}
@inproceedings{Elkin2015,
   abstract = {Graph coloring is a central problem in distributed computing. Both vertex- and edge-coloring problems have been extensively studied in this context. In this paper we show that a (2δ - l)-edge-coloring can be computed in time smaller than log<sup>∈</sup> n for any ∈ > 0, specifically, in e<sup>o</sup>(√log log n) rounds. This establishes a separation between the (2δ- l)-edge-coloring and Maximal Matching problems, as the latter is known to require ω(√log n) time [15]. No such separation is currently known between the (δ + l)-vertex-coloring and Maximal Independent Set problems. We devise a (1 + ∈)A-edge-coloring algorithm for an arbitrarily small constant ∈ > 0. This result applies whenever A > Ae, for some constant Ae which depends on e. The running time of this algorithm is O(log∗ δ +log n/δ<sup>1-0(1)</sup>). A much earlier logarithmic-time algorithm by Dubhashi, Grable and Panconesi [11] assumed δ ≥ (log n)<sup>1+ω(1)</sup>. For A = (log n) <sup>1+n(1)</sup> the running time of our algorithm is only O(log∗ n). This constitutes a drastic improvement of the previous logarithmic bound [11, 9]. Our results for (2δ - l)-edge-coloring also follows from our more general results concerning (1 - ∈)-locally sparse graphs. Specifically, we devise a (δ + l)-vertex coloring algorithm for (1 - ∈)-locally sparse graphs that runs in O(log∗ δ + log(l/e)) rounds for any ∈ > 0, provided that ∈δ = (log n)<sup>1+ω(1)</sup>. We conclude that the (δ + 1)-vertex coloring problem for (1 - ∈)-locally sparse graphs can be solved in O(log(l/∈)) + e<sup>o√loglog n</sup> time. This imply our result about (2δ - l)-edge-coloring, because (2δ - 1)-edge-coloring reduces to (δ + 1)-vertex-coloring of the line graph of the original graph, and because line graphs are (1/2 + o(1))-locally sparse.},
   author = {Michael Elkin and Seth Pettie and Hsin Hao Su},
   doi = {10.1137/1.9781611973730.26},
   issue = {January},
   journal = {Proceedings of the Annual ACM-SIAM Symposium on Discrete Algorithms},
   pages = {355-370},
   publisher = {Association for Computing Machinery},
   title = {(2δ - L)-edge-coloring is much easier than maximal matching in the distributed setting},
   volume = {2015-January},
   url = {https://epubs.siam.org/page/terms},
   year = {2015},
}
@report{Fischer2017a,
   abstract = {Locally Checkable Labeling (LCL) problems include essentially all the classic problems of LOCAL distributed algorithms. In a recent enlightening revelation, Chang and Pettie [arXiv 1704.06297] showed that any LCL (on bounded degree graphs) that has an o(log n)-round randomized algorithm can be solved in T LLL (n) rounds, which is the randomized complexity of solving (a relaxed variant of) the Lovász Local Lemma (LLL) on bounded degree n-node graphs. Currently, the best known upper bound on T LLL},
   author = {Manuela Fischer and Eth Zurich},
   keywords = {()},
   title = {Sublogarithmic Distributed Algorithms for Lovász Local Lemma, and the Complexity Hierarchy Mohsen Ghaffari},
   year = {2017},
}
@article{Naor1991,
   abstract = {Suppose that n processors are arranged in a ring and can communicate only with their immediate neighbors. It is shown that any probabilistic algorithm for 3 coloring the ring must take at least $\f...},
   author = {Moni Naor},
   doi = {10.1137/0404036},
   issn = {0895-4801},
   issue = {3},
   journal = {SIAM Journal on Discrete Mathematics},
   keywords = {68M10,68Q20,68R05,68R10,distributed computation,graph coloring,probabilistic algorithms},
   month = {8},
   pages = {409-412},
   publisher = {Society for Industrial & Applied Mathematics (SIAM)},
   title = {A Lower Bound on Probabilistic Algorithms for Distributive Ring Coloring},
   volume = {4},
   year = {1991},
}
@article{Cole1986,
   abstract = {The following problem is considered: given a linked list of length n, compute the distance from each element of the linked list to the end of the list. The problem has two standard deterministic algorithms: a linear time serial algorithm, and an O(log n) time parallel algorithm using n processors. We present new deterministic parallel algorithms for the problem. Our strongest results are (1) O(log n log* n) time using n/(log n log* n) processors (this algorithm achieves optimal speed-up); (2) O(log n) time using n log(k)n/log n processors, for any fixed positive integer k. The algorithms apply a novel "random-like" deterministic technique. This technique provides for a fast and efficient breaking of an apparently symmetric situation in parallel and distributed computation. © 1986 Academic Press, Inc.},
   author = {Richard Cole and Uzi Vishkin},
   doi = {10.1016/S0019-9958(86)80023-7},
   issn = {00199958},
   issue = {1},
   journal = {Information and Control},
   month = {7},
   pages = {32-53},
   publisher = {Academic Press},
   title = {Deterministic coin tossing with applications to optimal parallel list ranking},
   volume = {70},
   year = {1986},
}
@report{Chang2016,
   abstract = {Over the past 30 years numerous algorithms have been designed for symmetry breaking problems in the LOCAL model, such as maximal matching, MIS, vertex coloring, and edge-coloring. For most problems the best randomized algorithm is at least exponentially faster than the best deterministic algorithm. In this paper we prove that these exponential gaps are necessary and establish numerous connections between the deterministic and randomized complexities in the LOCAL model. Each of our results has a very compelling takeaway message: Fast ∆-coloring of trees requires random bits. Building on the recent randomized lower bounds of Brandt et al. [11], we prove that the randomized complexity of ∆-coloring a tree with maximum degree ∆ is Θ(log ∆ log n), for any ∆ ≥ 55, whereas its deterministic complexity is Θ(log ∆ n) for any ∆ ≥ 3. 1 This also establishes a large separation between the deterministic complexity of ∆-coloring and (∆ + 1)-coloring trees. Randomized lower bounds imply deterministic lower bounds. We prove that any deterministic algorithm for a natural class of problems that runs in O(1) + o(log ∆ n) rounds can be transformed to run in O(log * n − log * ∆ + 1) rounds. If the transformed algorithm violates a lower bound (even allowing randomization), then one can conclude that the problem requires Ω(log ∆ n) time deterministically. (This gives an alternate proof that deterministically ∆-coloring a tree with small ∆ takes Ω(log ∆ n) rounds.) Deterministic lower bounds imply randomized lower bounds. We prove that the randomized complexity of any natural problem on instances of size n is at least its deterministic complexity on instances of size √ log n. This shows that a deterministic Ω(log ∆ n) lower bound for any problem (∆-coloring a tree, for example) implies a randomized Ω(log ∆ log n) lower bound. It also illustrates that the graph shattering technique employed in recent randomized symmetry breaking algorithms is absolutely essential to the LOCAL model. For example, it is provably impossible to improve the 2 O(√ log log n) terms in the complexities of the best MIS and (∆ + 1)-coloring algorithms without also improving the 2 O(√ log n)-round Panconesi-Srinivasan algorithms.},
   author = {Yi-Jun Chang and Tsvi Kopelowitz and Seth Pettie},
   isbn = {1602.08166v2},
   keywords = {()},
   title = {An Exponential Separation Between Randomized and Deterministic Complexity in the LOCAL Model *},
   year = {2016},
}
@report{Chang2017,
   author = {Yi-Jun Chang and Seth Pettie},
   title = {A Time Hierarchy Theorem for the LOCAL Model *},
   year = {2017},
}
@report{Balliu2016,
   abstract = {A number of recent papers-e.g. Brandt et al.have advanced our understanding of one of the most fundamental questions in theory of distributed computing: what are the possible time complexity classes of LCL problems in the LOCAL model? In essence, we have a graph problem Π in which a solution can be verified by checking all radius-O(1) neighbourhoods, and the question is what is the smallest T such that a solution can be computed so that each node chooses its own output based on its radius-T neighbourhood. Here T is the distributed time complexity of Π. The time complexity classes for deterministic algorithms in bounded-degree graphs that are known to exist by prior work are Θ(1), Θ(log * n), Θ(log n), Θ(n 1/k), and Θ(n). It is also known that there are two gaps: one between ω(1) and o(log log * n), and another between ω(log * n) and o(log n). It has been conjectured that many more gaps exist, and that the overall time hierarchy is relatively simple-indeed, this is known to be the case in restricted graph families such as cycles and grids. We show that the picture is much more diverse than previously expected. We present a general technique for engineering LCL problems with numerous different deterministic time complexities, including Θ(log α n) for any α ≥ 1, 2 Θ(log α n) for any α ≤ 1, and Θ(n α) for any α < 1/2 in the high end of the complexity spectrum, and Θ(log α log * n) for any α ≥ 1, 2 Θ(log α log * n) for any α ≤ 1, and Θ((log * n) α) for any α ≤ 1 in the low end of the complexity spectrum; here α is a positive rational number.},
   author = {Alkida Balliu and Juho Hirvonen and Janne H Korhonen and Dennis Olivetti and Jukka Suomela},
   title = {New Classes of Distributed Time Complexity},
   year = {2016},
}
@report{Balliu2020-1,
   abstract = {The landscape of the distributed time complexity is nowadays well-understood for subpolyno-mial complexities. When we look at deterministic algorithms in the LOCAL model and locally checkable problems (LCLs) in bounded-degree graphs, the following picture emerges: There are lots of problems with time complexities of Θ(log * n) or Θ(log n). It is not possible to have a problem with complexity between ω(log * n) and o(log n). In general graphs, we can construct LCL problems with infinitely many complexities between ω(log n) and n o(1). In trees, problems with such complexities do not exist. However, the high end of the complexity spectrum was left open by prior work. In general graphs there are LCL problems with complexities of the form Θ(n α) for any rational 0 < α ≤ 1/2, while for trees only complexities of the form Θ(n 1/k) are known. No LCL problem with complexity between ω(√ n) and o(n) is known, and neither are there results that would show that such problems do not exist. We show that: In general graphs, we can construct LCL problems with infinitely many complexities between ω(√ n) and o(n). In trees, problems with such complexities do not exist. Put otherwise, we show that any LCL with a complexity o(n) can be solved in time O(√ n) in trees, while the same is not true in general graphs.},
   author = {Alkida Balliu and Sebastian Brandt ETH Zurich and ethzch Dennis Olivetti and Jukka Suomela},
   keywords = {2012 ACM Subject Classification Theory of computation → Distributed computing models,LOCAL model,Theory of computation → Complexity classes Keywords and phrases Distributed complexity theory,locally checkable labellings},
   title = {Almost Global Problems in the LOCAL Model},
   year = {2020},
}
@inproceedings{Balliu2020-2,
   abstract = {Locally checkable labeling problems (LCLs) are distributed graph problems in which a solution is globally feasible if it is locally feasible in all constant-radius neighborhoods. Vertex colorings, maximal independent sets, and maximal matchings are examples of LCLs. On the one hand, it is known that some LCLs benefit exponentially from randomness - -for example, any deterministic distributed algorithm that finds a sinkless orientation requires Θ(log n) rounds in the LOCAL model, while the randomized complexity of the problem is Θ(log log n) rounds. On the other hand, there are also many LCLs in which randomness is useless. Previously, it was not known whether there are any LCLs that benefit from randomness, but only subexponentially. We show that such problems exist: for example, there is an LCL with deterministic complexity Θ(log2 n) rounds and randomized complexity Θ(log n log log n) rounds.},
   author = {Alkida Balliu and Sebastian Brandt and Dennis Olivetti and Jukka Suomela},
   city = {New York, NY, USA},
   doi = {10.1145/3382734.3405715},
   isbn = {9781450375825},
   journal = {Proceedings of the Annual ACM Symposium on Principles of Distributed Computing},
   keywords = {LOCAL model,distributed computational complexity,locally checkable labeling problems},
   month = {7},
   pages = {299-308},
   publisher = {Association for Computing Machinery},
   title = {How much does randomness help with locally checkable problems?},
   url = {https://dl.acm.org/doi/10.1145/3382734.3405715},
   year = {2020},
}
@article{Brandt2017,
   author = {Sebastian Brandt},
   month = {2},
   note = {A paper to reference as evidence that LCLs are widely studied},
   title = {LCL problems on grids},
   url = {http://arxiv.org/abs/1702.05456},
   year = {2017},
}
@book{Hirvonen2020,
   author = {Juho Hirvonen and Jukka Suomela},
   title = {Distributed Algorithms 2020},
   url = {https://jukkasuomela.fi/da2020/},
   year = {2020},
}
@book{Wattenhofer2016,
   author = {Roger Wattenhofer},
   note = {Introduction contains a list of applications for distributed computing},
   title = {Principles of Distributed Computing},
   year = {2016},
}
@report{Ghaffari2020,
   author = {Mohsen Ghaffari and Eth Zurich and Fabian Kuhn},
   title = {Deterministic Distributed Vertex Coloring: Simpler, Faster, and without Network Decomposition},
   year = {2020},
}
@inproceedings{Chang2019,
   abstract = {The complexity of distributed edge coloring depends heavily on the palette size as a function of the maximum degree Δ. In this article, we explore the complexity of edge coloring in the LOCAL model in different palette size regimes. Our results are as follows. Lower Bounds: First, we simplify the round elimination technique of Brandt et al. [16] and prove that (2Δ - 2)-edge coloring requires Ω(logΔ logn) time with high probability and Ω(logΔ n) time deterministically, even on trees. Second, we show that a natural approach to computing (Δ + 1)-edge colorings (Vizing's theorem), namely, extending an arbitrary partial coloring by iteratively recoloring subgraphs, requires Ω(Δlogn) time. Upper Bounds on General Graphs: We give a randomized edge coloring algorithm that can use palette sizes as small as Δ + O ( √ Δ), which is a natural barrier for randomized approaches. The running time of our (1 + ∈)Δ-edge coloring algorithm is usually dominated by O(log ∈ -1) calls to a distributed Lovasz local lemma (LLL) algorithm. For example, using the Chung-Pettie-Su LLL algorithm, we compute a (1 + ∈)Δ-edge coloring in O(logn) time when ∈ ≥ (log3 Δ)/ √ Δ, or O(logΔ n) + (log logn)3+o(1) time when ∈ = Ω(1). When Δ is sublogarithmic in n the performance is improved with the Ghaffari-Harris-Kuhn LLL algorithm. Upper Bounds on Trees: We show that the Ω(logΔ logn) lower bound can be nearly matched on trees. To establish this result, we develop a new distributed Lovasz local lemma algorithm for tree-structured dependency graphs, which arise naturally from O(1)-round probabilistic algorithms run on trees. Specifically, our (1 + ∈)Δ-edge coloring algorithm for trees takes O(log(1/∈ )) max\{ log log n log log log n , loglog Δ logn\} time when∈ ≥ (log3 Δ)/ √ Δ, orO(max\{ log log n log log log n , logΔ logn\}) time when ∈ = Ω(1).},
   author = {Yi Jun Chang and Qizheng He and Wenzheng Li and Seth Pettie and Jara Uitto},
   doi = {10.1145/3365004},
   issn = {15496333},
   issue = {1},
   journal = {ACM Transactions on Algorithms},
   keywords = {Distributed algorithms,Edge coloring,LOCAL model,Lovasz local lemma},
   month = {11},
   pages = {1-51},
   publisher = {Association for Computing Machinery},
   title = {Distributed edge coloring and a special case of the constructive lovász local lemma},
   volume = {16},
   url = {https://dl.acm.org/doi/10.1145/3365004},
   year = {2019},
}
@report{,
   abstract = {The problem of coloring the edges of an n-node graph of maximum degree ∆ with 2∆ − 1 colors is one of the key symmetry breaking problems in the area of distributed graph algorithms. While there has been a lot of progress towards the understanding of this problem, the dependency of the running time on ∆ has been a long-standing open question. Very recently, Kuhn [SODA '20] showed that the problem can be solved in time 2 O(√ log ∆) + O(log * n). In this paper, we study the edge coloring problem in the distributed LOCAL model. We show that the (degree + 1)-list edge coloring problem, and thus also the (2∆ − 1)-edge coloring problem, can be solved deterministically in time log O(log log ∆) ∆ + O(log * n). This is a significant improvement over the result of Kuhn [SODA '20].},
   author = {Alkida Balliu and Fabian Kuhn and Dennis Olivetti},
   title = {Distributed Edge Coloring in Time Quasi-Polylogarithmic in Delta},
}
@report{Chang2020a,
   abstract = {Recent research revealed the existence of gaps in the complexity landscape of locally checkable labeling (LCL) problems in the LOCAL model of distributed computing. For example, the de-terministic round complexity of any LCL problem on bounded-degree graphs is either O(log * n) or Ω(log n) [Chang, Kopelowitz, and Pettie, FOCS 2016]. The complexity landscape of LCL problems is now quite well-understood, but a few questions remain open. For bounded-degree trees, there is an LCL problem with round complexity Θ(n 1/k) for each positive integer k [Chang and Pettie, FOCS 2017]. It is conjectured that no LCL problem has round complexity o(n 1/(k−1)) and ω(n 1/k) on bounded-degree trees. As of now, only the case of k = 2 has been proved [Balliu et al., DISC 2018]. In this paper, we show that for LCL problems on bounded-degree trees, there is indeed a gap between Θ(n 1/(k−1)) and Θ(n 1/k) for each k ≥ 2. Our proof is constructive in the sense that it offers a sequential algorithm that decides which side of the gap a given LCL problem belongs to. We also show that it is EXPTIME-hard to distinguish between Θ(1)-round and Θ(n)-round LCL problems on bounded-degree trees. This improves upon a previous PSPACE-hardness result [Balliu et al., PODC 2019].},
   author = {Yi-Jun Chang},
   note = {<br/>},
   title = {The Complexity Landscape of Distributed Locally Checkable Problems on Trees},
   year = {2020},
}
@article{Panconesi2001,
   abstract = {We give simple, deterministic, distributed algorithms for computing maximal matchings, maximal independent sets and colourings. We show that edge colourings with at most 2Δ - 1 colours, and maximal matchings can be computed within O(log* n + Δ) deterministic rounds, where Δ is the maximum degree of the network. We also show how to find maximal independent sets and (Δ + 1)-vertex colourings within O(log* n + Δ2) deterministic rounds. All hidden constants are very small and the algorithms are very simple.},
   author = {Alessandro Panconesi and Romeo Rizzi},
   doi = {10.1007/PL00008932},
   issn = {01782770},
   issue = {2},
   journal = {Distributed Computing},
   keywords = {Distributed computing,Edge colouring,Maximal independent set,Maximal matching,Sparse networks,Vertex colouring},
   month = {4},
   note = {Deterministic upper bound for MM},
   pages = {97-100},
   publisher = {
		Springer-Verlag
		PUB3755
		Berlin, Heidelberg
	},
   title = {Some simple distributed algorithms for sparse networks},
   volume = {14},
   url = {http://link.springer.com/10.1007/PL00008932},
   year = {2001},
}
@report{Fischer2017b,
   author = {Manuela Fischer},
   isbn = {1703.00900v2},
   note = {Upper bound for MM},
   title = {Improved Deterministic Distributed Matching via Rounding},
   year = {2017},
}
@article{Rozhon2019,
   abstract = {We present a simple polylogarithmic-time deterministic distributed algorithm for network decomposition. This improves on a celebrated $2^\{O(\sqrt\{\log n\})\}$-time algorithm of Panconesi and Srinivasan [STOC'92] and settles a central and long-standing question in distributed graph algorithms. It also leads to the first polylogarithmic-time deterministic distributed algorithms for numerous other problems, hence resolving several well-known and decades-old open problems, including Linial's question about the deterministic complexity of maximal independent set [FOCS'87; SICOMP'92]---which had been called the most outstanding problem in the area. The main implication is a more general distributed derandomization theorem: Put together with the results of Ghaffari, Kuhn, and Maus [STOC'17] and Ghaffari, Harris, and Kuhn [FOCS'18], our network decomposition implies that $$\mathsf\{P\}\textit\{-\}\mathsf\{RLOCAL\} = \mathsf\{P\}\textit\{-\}\mathsf\{LOCAL\}.$$ That is, for any problem whose solution can be checked deterministically in polylogarithmic-time, any polylogarithmic-time randomized algorithm can be derandomized to a polylogarithmic-time deterministic algorithm. Informally, for the standard first-order interpretation of efficiency as polylogarithmic-time, distributed algorithms do not need randomness for efficiency. By known connections, our result leads also to substantially faster randomized distributed algorithms for a number of well-studied problems including $(\Delta+1)$-coloring, maximal independent set, and Lov\'\{a\}sz Local Lemma, as well as massively parallel algorithms for $(\Delta+1)$-coloring.},
   author = {Mohsen Ghaffari},
   journal = {Proceedings of the Annual ACM Symposium on Theory of Computing},
   keywords = {Derandomization,Distributed algorithms,Network decomposition},
   month = {7},
   note = {Upper bounds for MIS},
   pages = {350-363},
   publisher = {Association for Computing Machinery},
   title = {Polylogarithmic-Time Deterministic Network Decomposition and Distributed Derandomization},
   url = {http://arxiv.org/abs/1907.10937},
   year = {2019},
}
@inproceedings{Balliu2019,
   abstract = {There are distributed graph algorithms for finding maximal matchings and maximal independent sets in O(Δ + log∗ n) communication rounds; here n is the number of nodes and Δ is the maximum degree. The lower bound by Linial (1987, 1992) shows that the dependency on n is optimal: These problems cannot be solved in o(log∗ n) rounds even if Δ = 2. However, the dependency on Δ is a long-standing open question, and there is currently an exponential gap between the upper and lower bounds. We prove that the upper bounds are tight. We show that maximal matchings and maximal independent sets cannot be found in o(Δ + log log n / log log log n) rounds with any randomized algorithm in the LOCAL model of distributed computing. As a corollary, it follows that there is no deterministic algorithm for maximal matchings or maximal independent sets that runs in o(Δ + log n / log log n) rounds; this is an improvement over prior lower bounds also as a function of n.},
   author = {Alkida Balliu and Sebastian Brandt and Juho Hirvonen and Dennis Olivetti and Mikael Rabie and Jukka Suomela},
   doi = {10.1109/FOCS.2019.00037},
   isbn = {9781728149523},
   issn = {02725428},
   journal = {Proceedings - Annual IEEE Symposium on Foundations of Computer Science, FOCS},
   keywords = {Maximal matching,distributed graph algorithms,lower bounds,maximal independent set},
   month = {11},
   note = {Lower bounds for MIS and MM},
   pages = {481-497},
   publisher = {IEEE Computer Society},
   title = {Lower Bounds for Maximal Matchings and Maximal Independent Sets},
   volume = {2019-November},
   year = {2019},
}
@web_page{Suomela2020,
   author = {Jukka Suomela},
   note = {Talk and a write-up about latest results on landscape of locality. Includes history of how the landscape was discovered},
   title = {Landscape of Locality},
   url = {https://jukkasuomela.fi/landscape-of-locality/},
   year = {2020},
}
@web_page{Rocher2020,
   author = {Tanguy Rocher},
   note = {Almost complete classification for 3 label problems on trees of degree 3.},
   title = {GitHub - trocher/tlpDoc},
   url = {https://github.com/trocher/tlpDoc},
   year = {2020},
}
@article{Chang2020,
   abstract = {The locality of a graph problem is the smallest distance $T$ such that each node can choose its own part of the solution based on its radius-$T$ neighborhood. In many settings, a graph problem can be solved efficiently with a distributed or parallel algorithm if and only if it has a small locality. In this work we seek to automate the study of solvability and locality: given the description of a graph problem $\Pi$, we would like to determine if $\Pi$ is solvable and what is the asymptotic locality of $\Pi$ as a function of the size of the graph. Put otherwise, we seek to automatically synthesize efficient distributed and parallel algorithms for solving $\Pi$. We focus on locally checkable graph problems; these are problems in which a solution is globally feasible if it looks feasible in all constant-radius neighborhoods. Prior work on such problems has brought primarily bad news: questions related to locality are undecidable in general, and even if we focus on the case of labeled paths and cycles, determining locality is $\mathsf\{PSPACE\}$-hard (Balliu et al., PODC 2019). We complement prior negative results with efficient algorithms for the cases of unlabeled paths and cycles and, as an extension, for rooted trees. We introduce a new automata-theoretic perspective for studying locally checkable graph problems. We represent a locally checkable problem $\Pi$ as a nondeterministic finite automaton $\mathcal\{M\}$ over a unary alphabet. We identify polynomial-time-computable properties of the automaton $\mathcal\{M\}$ that near-completely capture the solvability and locality of $\Pi$ in cycles and paths, with the exception of one specific case that is $\mbox\{co-$\mathsf\{NP\}$\}$-complete.},
   author = {Yi-Jun Chang and Jan Studený and Jukka Suomela},
   month = {2},
   note = {Complete classification for unlabelled paths and cycles, and as an extension for rooted trees. Polynomial time meta-algorithm},
   title = {Distributed graph problems through an automata-theoretic lens},
   url = {http://arxiv.org/abs/2002.07659},
   year = {2020},
}
@article{Balliu2019,
   abstract = {We present a complete classification of the deterministic distributed time complexity for a family of graph problems: binary labeling problems in trees. These are locally checkable problems that can be encoded with an alphabet of size two in the edge labeling formalism. Examples of binary labeling problems include sinkless orientation, sinkless and sourceless orientation, 2-vertex coloring, perfect matching, and the task of coloring edges red and blue such that all nodes are incident to at least one red and at least one blue edge. More generally, we can encode e.g. any cardinality constraints on indegrees and outdegrees. We study the deterministic time complexity of solving a given binary labeling problem in trees, in the usual LOCAL model of distributed computing. We show that the complexity of any such problem is in one of the following classes: $O(1)$, $\Theta(\log n)$, $\Theta(n)$, or unsolvable. In particular, a problem that can be represented in the binary labeling formalism cannot have time complexity $\Theta(\log^* n)$, and hence we know that e.g. any encoding of maximal matchings has to use at least three labels (which is tight). Furthermore, given the description of any binary labeling problem, we can easily determine in which of the four classes it is and what is an asymptotically optimal algorithm for solving it. Hence the distributed time complexity of binary labeling problems is decidable, not only in principle, but also in practice: there is a simple and efficient algorithm that takes the description of a binary labeling problem and outputs its distributed time complexity.},
   author = {Alkida Balliu and Sebastian Brandt and Yuval Efron and Juho Hirvonen and Yannic Maus and Dennis Olivetti and Jukka Suomela},
   keywords = {Aalto,Efron · szxrtde@cstechnionacil ·,Hirvonen · juhohirvonen@aaltofi ·,Juho,Maus · yannicmaus@campustechnionacil ·,Technion,University,Yannic,Yuval},
   month = {11},
   note = {Complete classification of 2 label problems on trees. Look up table},
   title = {Classification of distributed binary labeling problems},
   url = {http://arxiv.org/abs/1911.13294},
   year = {2019},
}
@web_page{Olivetti2020,
   author = {Dennis Olivetti},
   note = {GitHub repository of the RE tool and a manual for it.},
   title = {Round Eliminator: a tool for automatic speedup simulation},
   url = {https://github.com/olidennis/round-eliminator},
   year = {2020},
}
@inproceedings{Brandt2019,
   abstract = {Recently, Brandt et al. [STOC'16] proved a lower bound for the distributed Lovasz Local Lemma, which has been conjectured to be tight for sufficiently relaxed LLL criteria by Chang and Pettie [FOCS'17]. At the heart of their result lies a speedup technique that, for graphs of girth at least 2t +2, transforms any t -round algorithm for one specific LLL problem into a (t - 1)-round algorithm for the same problem. We substantially improve on this technique by showing that such a speedup exists for any locally checkable problem ∏, with the difference that the problem ∏1 the inferred (t .1)-round algorithm solves is not (necessarily) the same problem as ∏. Our speedup is automatic in the sense that there is a fixed procedure that transforms a description for ∏ into a description for ∏1 and reversible in the sense that any (t - 1)-round algorithm for ∏1 can be transformed into a t -round algorithm for ∏. In particular, for any locally checkable problem ∏ with exact deterministic time complexity T (n, δ) ≤ t on graphs with n nodes, maximum node degree δ, and girth at least 2t + 2, there is a sequence of problems ∏1, ∏2, ⋯ with time complexities T (n, δ) . 1,T (n, δ) - 2, ⋯ , that can be inferred from ∏. As a first application of our generalized speedup, we solve a longstanding open problem of Naor and Stockmeyer [STOC'93]: we show that weak 2-coloring in odd-degree graphs cannot be solved in o(log.δ) rounds, thereby providing a matching lower bound to their upper bound.},
   author = {Sebastian Brandt},
   city = {New York, NY, USA},
   doi = {10.1145/3293611.3331611},
   isbn = {9781450362177},
   journal = {Proceedings of the Annual ACM Symposium on Principles of Distributed Computing},
   keywords = {Distributed graph algorithms,Locally checkable problems,Weak coloring},
   month = {7},
   note = {Introduces Round Elimination and its relevance to deciding complexity of LCLs},
   pages = {379-388},
   publisher = {Association for Computing Machinery},
   title = {An automatic speedup theorem for distributed problems},
   url = {https://dl.acm.org/doi/10.1145/3293611.3331611},
   year = {2019},
}
@inproceedings{Naor1993,
   abstract = {The purpose of this paper is a study of computation that can be done locally in a distributed network. By locally we mean within time (or distance) independent of the size of the network. We consider Locally Checkable Labeling (LCL) problems, where the legality of a labeling can be checked locally (e.g., coloring). Our results include the following: .There are non-Trivial LCL problems that have local algorithms. There is a variant of the dining philosophers problem which can be solved locally. Randomization cannot make an LCL problem local; i.e., if a problem has a local randomized algorithm then it has a local deterministic algorithm. It is undecidable, in general, whether a given LCL has a local algorithm. However, it is decidable whether a given LCL has an algorithm that operates in a given time t. Any LCL problem that has a local algorithm has one which is order-invariant (the algorithm depends only on the order of the processor id's).},
   author = {Moni Naor and Larry Stockmeyer},
   city = {New York, New York, USA},
   doi = {10.1145/167088.167149},
   isbn = {0897915917},
   issn = {07378017},
   journal = {Proceedings of the Annual ACM Symposium on Theory of Computing},
   month = {6},
   note = {Defines LCL problems for the first time.},
   pages = {184-193},
   publisher = {Association for Computing Machinery},
   title = {What can be computed locally?},
   volume = {Part F129585},
   url = {http://portal.acm.org/citation.cfm?doid=167088.167149},
   year = {1993},
}
@article{Linial1992,
   abstract = {This paper concerns a number of algorithmic problems on graphs and how they may be solved in a distributed fashion. The computational model is such that each node of the graph is occupied by a processor which has its own ID. Processors are restricted to collecting data from others which are at a distance at most t away from them in t time units, but are otherwise computationally unbounded. This model focuses on the issue of locality in distributed processing, namely, to what extent a global solution to a computational problem can be obtained from locally available data. Three results are proved within this model. A 3-coloring of an n-cycle requires time Ω(log n). This bound is tight, by previous work of Cole and Vishkin. Any algorithm for coloring the d-regular tree of radius r which runs for time at most 2τ/3 requires at least Ω(√d) colors. In an n-vortex graph of largest degree Δ, O(Δ2)-coloring may be found in time O(log n).},
   author = {Nathan Linial},
   doi = {10.1137/0221015},
   issn = {00975397},
   issue = {1},
   journal = {SIAM Journal on Computing},
   keywords = {05C35,68Q99,68R10,distributed algorithms,graph theory,locality,lower bounds},
   month = {7},
   note = {One of the first papers exploring the  locality of problems in a distributed setting.},
   pages = {193-201},
   publisher = {Society for Industrial and Applied Mathematics},
   title = {Locality in distributed graph algorithms},
   volume = {21},
   year = {1992},
}
@inproceedings{Linial1987,
   abstract = {Processors that reside in the vertices of a graph G and communicate only with their neighbors are considered. The system is synchronous and reliable, there is not limit on message lengths, and local computation is instantaneous. It is shown that a maximal independent set in an n-cycle cannot be found faster than OMEGA (log***n), and this is optimal. The d-regular tree of radius r cannot be colored with fewer than ROOT d colors in time 2r/3. If DELTA is the largest degree in G which has order n, then in time O(log*n) it can be colored with O( DELTA **2) colors.},
   author = {Nathan Linial},
   doi = {10.1109/sfcs.1987.20},
   isbn = {0818608072},
   issn = {02725428},
   journal = {Annual Symposium on Foundations of Computer Science (Proceedings)},
   note = {One of the first papers on the study of Distributed Algorithms. Introduces LOCAL model.},
   pages = {331-335},
   publisher = {IEEE},
   title = {DISTRIBUTIVE GRAPH ALGORITHMS-GLOBAL SOLUTIONS FROM LOCAL DATA.},
   year = {1987},
}
